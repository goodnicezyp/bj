<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xkygame.ssm.dao.WithDrawRecordDao">
    <!--auto generated Code-->
    <resultMap id="BaseResultMap" type="com.xkygame.ssm.model.WithDrawRecord">
        <result column="id" property="id" jdbcType="BIGINT"/>
        <result column="userID" property="userID" jdbcType="BIGINT"/>
        <result column="price" property="price" jdbcType="DECIMAL"/>
        <result column="profit" property="profit" jdbcType="DECIMAL"/>
        <result column="createTime" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="update_by" property="update_by" jdbcType="VARCHAR"/>
        <result column="state" property="state" jdbcType="INTEGER"/>
        <result column="recordNo" property="recordNo"/>
    </resultMap>

    <resultMap id="DtoResultMap" type="com.xkygame.ssm.dto.WithDrawDto" autoMapping="true">
        <result column="id" property="id" jdbcType="BIGINT"/>
    </resultMap>

    <!--auto generated Code-->
    <sql id="Base_Column_List">
        id,
        userID,
        price,
        profit,
        createTime,
        updateTime,
        update_by,
        state,
recordNo
</sql>

    <!--auto generated Code-->
    <insert id="insert" useGeneratedKeys="true" keyProperty="withDrawRecord.id">
        INSERT INTO withdrawrecord (
            id,
            userID,
            price,
            profit,
            createTime,
            updateTime,
            update_by,
            state,
            recordNo
        ) VALUES (
            #{withDrawRecord.id},
            #{withDrawRecord.userID},
            #{withDrawRecord.price},
            #{withDrawRecord.profit},
            #{withDrawRecord.createTime},
            #{withDrawRecord.updateTime},
            #{withDrawRecord.update_by},
            #{withDrawRecord.state},
            #{withDrawRecord.recordNo}
        )
	</insert>

    <!--auto generated Code-->
    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="withDrawRecord.id">
        INSERT INTO withdrawrecord
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="withDrawRecord.id!=null"> id,</if>
            <if test="withDrawRecord.userID!=null"> userID,</if>
            <if test="withDrawRecord.price!=null"> price,</if>
            <if test="withDrawRecord.profit!=null"> profit,</if>
            <if test="withDrawRecord.createTime!=null"> createTime,</if>
            <if test="withDrawRecord.updateTime!=null"> updateTime,</if>
            <if test="withDrawRecord.update_by!=null"> update_by,</if>
            <if test="withDrawRecord.state!=null"> state,</if>
            <if test="withDrawRecord.recordNo!=null"> recordNo</if>
        </trim>
        VALUES
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="withDrawRecord.id!=null"> #{withDrawRecord.id},</if>
            <if test="withDrawRecord.userID!=null"> #{withDrawRecord.userID},</if>
            <if test="withDrawRecord.price!=null"> #{withDrawRecord.price},</if>
            <if test="withDrawRecord.profit!=null"> #{withDrawRecord.profit},</if>
            <if test="withDrawRecord.createTime!=null"> #{withDrawRecord.createTime},</if>
            <if test="withDrawRecord.updateTime!=null"> #{withDrawRecord.updateTime},</if>
            <if test="withDrawRecord.update_by!=null"> #{withDrawRecord.update_by},</if>
            <if test="withDrawRecord.state!=null"> #{withDrawRecord.state},</if>
            <if test="withDrawRecord.recordNo!=null"> #{withDrawRecord.recordNo}</if>
        </trim>
	</insert>

    <!--auto generated Code-->
    <insert id="insertList">        INSERT INTO withdrawrecord(
        <include refid="Base_Column_List"/>
        )VALUES
        <foreach collection="withDrawRecords" item="withDrawRecord" index="index" separator=",">
            (
            #{withDrawRecord.id},
            #{withDrawRecord.userID},
            #{withDrawRecord.price},
            #{withDrawRecord.profit},
            #{withDrawRecord.createTime},
            #{withDrawRecord.updateTime},
            #{withDrawRecord.update_by},
            #{withDrawRecord.state},
            #{withDrawRecord.recordNo}
            )
        </foreach>
	</insert>

    <!--auto generated Code-->
    <update id="update">
        UPDATE withdrawrecord
        <set>
            <if test="withDrawRecord.id != null"> id = #{withDrawRecord.id},</if>
            <if test="withDrawRecord.userID != null"> userID = #{withDrawRecord.userID},</if>
            <if test="withDrawRecord.price != null"> price = #{withDrawRecord.price},</if>
            <if test="withDrawRecord.profit != null"> profit = #{withDrawRecord.profit},</if>
            <if test="withDrawRecord.createTime != null"> createTime = #{withDrawRecord.createTime},</if>
            <if test="withDrawRecord.updateTime != null"> updateTime = #{withDrawRecord.updateTime},</if>
            <if test="withDrawRecord.update_by != null"> update_by = #{withDrawRecord.update_by},</if>
            <if test="withDrawRecord.state != null"> state = #{withDrawRecord.state},</if>
            <if test="withDrawRecord.recordNo != null"> recordNo = #{withDrawRecord.recordNo}</if>
        </set>
		WHERE id = #{withDrawRecord.id,jdbcType=BIGINT}
    </update>

    <select id="findWithDrawRecord" resultMap="BaseResultMap">
        SELECT * FROM withDrawRecord WHERE userid=#{id} ORDER BY id DESC limit #{pageNo},#{pageSize}
    </select>
    <select id="findByPage" resultMap="DtoResultMap">
        SELECT wd.*,w.userName,w.userImg,w.realName FROM withDrawRecord wd
        LEFT JOIN wxuser w on wd.userid=w.id
        <where>
            <if test="map.searchVal != null and map.searchVal !=''">LOWER (concat(wd.recordNo,w.userName,w.realName)) LIKE LOWER (#{map.searchVal})</if>
            <if test="map.state != null or map.state == 0">AND wd.state = #{map.state}</if>
        </where>
        order BY id DESC limit #{pageNo},#{pageSize}
    </select>
    <select id="total" resultType="int">
        SELECT count(1) FROM withDrawRecord wd
        LEFT JOIN wxuser w on wd.userid=w.id
        <where>
            <if test="map.searchVal != null and map.searchVal !=''">LOWER (concat(wd.recordNo,w.userName,w.realName)) LIKE LOWER (#{map.searchVal})</if>
        </where>
    </select>
    <select id="findByRecordNo" resultType="com.xkygame.ssm.model.WithDrawRecord">
        SELECT * FROM withDrawRecord WHERE recordNo=#{recordNo}
    </select>

    <update id="withDrawFinish">
        UPDATE withDrawRecord SET updateTime=#{updateTime},update_by=#{update_by},state=#{state}
        WHERE id=#{id}
    </update>
</mapper>

