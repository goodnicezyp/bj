<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xkygame.ssm.dao.DownloadRecordDao">
    <!--auto generated Code-->
    <resultMap id="BaseResultMap" type="com.xkygame.ssm.model.DownloadRecord" autoMapping="true">
        <result column="id" property="id" jdbcType="BIGINT"/>
        <result column="createTime" property="createTime" jdbcType="DATE"/>
    </resultMap>
    <resultMap id="DtoResultMap" type="com.xkygame.ssm.dto.DownloadDto" autoMapping="true">
        <result column="id" property="id" jdbcType="BIGINT"/>
        <result column="createTime" property="createTime" jdbcType="DATE"/>
    </resultMap>

    <!--auto generated Code-->
    <sql id="Base_Column_List">
        id,
        userid,
        workid,
        createTime,
        userid,
        workid,
        name,
        authorID,
        coverPic,
        type,
        cateid,
        cateName
    </sql>

    <!--auto generated Code-->
    <insert id="insert" useGeneratedKeys="true" keyProperty="downloadRecord.id">
        INSERT INTO downloadrecord (
            id,
            createTime,
            userid,
            workid,
            name,
            authorID,
            coverPic,
            type,
            cateid,
            cateName,
            sourceType
        ) VALUES (
            #{downloadRecord.id},
            #{downloadRecord.createTime},
            #{downloadRecord.userid},
            #{downloadRecord.workid},
            #{downloadRecord.name},
            #{downloadRecord.authorID},
            #{downloadRecord.coverPic},
            #{downloadRecord.type},
            #{downloadRecord.cateid},
            #{downloadRecord.cateName},
            #{downloadRecord.sourceType}
        )
	</insert>

    <!--auto generated Code-->
    <update id="update">
        UPDATE downloadrecord
        <set>
            <if test="downloadRecord.id != null"> id = #{downloadRecord.id},</if>
            <if test="downloadRecord.createTime != null"> createTime = #{downloadRecord.createTime},</if>
            <if test="downloadRecord.userid != null"> userid = #{downloadRecord.userid},</if>
            <if test="downloadRecord.workid != null"> workid = #{downloadRecord.workid},</if>
            <if test="downloadRecord.name != null"> name = #{downloadRecord.name},</if>
            <if test="downloadRecord.authorID != null"> authorID = #{downloadRecord.authorID},</if>
            <if test="downloadRecord.coverPic != null"> coverPic = #{downloadRecord.coverPic},</if>
            <if test="downloadRecord.type != null"> type = #{downloadRecord.type}</if>
            <if test="downloadRecord.cateid != null"> cateid = #{downloadRecord.cateid}</if>
            <if test="downloadRecord.cateName != null"> cateName = #{downloadRecord.cateName}</if>
            <if test="downloadRecord.sourceType != null"> sourceType = #{downloadRecord.sourceType}</if>
        </set>
		WHERE id = #{downloadRecord.id,jdbcType=BIGINT}
    </update>

    <select id="findAllByPage" resultMap="DtoResultMap">
        SELECT d.*,w.userName,w.userImg,w1.userName as authorName,w1.userImg as authorImg
        FROM downloadRecord d
        LEFT JOIN wxuser w on d.userid=w.id
        LEFT JOIN wxuser w1 on d.authorID=w1.id
        <where>
            <if test="map.searchVal != null and map.searchVal != ''">
                LOWER (concat(w.userName,d.name,w1.userName)) LIKE LOWER (#{map.searchVal})
            </if>
        </where>
        ORDER BY d.id DESC
        limit #{pageNo},#{pageSize}
    </select>

    <select id="total" resultType="java.lang.Integer">
        SELECT count(1)
        FROM downloadRecord d
        LEFT JOIN wxuser w on d.userid=w.id
        LEFT JOIN wxuser w1 on d.authorID=w1.id
        <where>
            <if test="map.searchVal != null and map.searchVal != ''">
                LOWER (concat(w.userName,d.name,w1.userName)) LIKE LOWER (#{map.searchVal})
            </if>
        </where>
    </select>
</mapper>

